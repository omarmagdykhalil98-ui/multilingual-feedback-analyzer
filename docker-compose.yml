services:
  db:
    image: postgres:15
    container_name: multilingual-feedback-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d feedback_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build: ./backend
    container_name: multilingual-feedback-backend
    volumes:
      - ./backend:/code
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      - CODESPACE_NAME=${CODESPACE_NAME}
      - CODESPACES=${CODESPACES}
      - GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN=${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}
    command: >
      sh -c "sleep 5 && uvicorn app.main:app --host 0.0.0.0 --port 80 --reload"

  frontend:
    build:
      context: ./frontend
    container_name: multilingual-feedback-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # prevents overwriting node_modules from host
    environment:
      - CHOKIDAR_USEPOLLING=true     # enables file watching on WSL/Windows
      - WATCHPACK_POLLING=true
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000/api}
    working_dir: /app
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 3000"
    depends_on:
      - backend
      
  adminer:
    image: adminer
    container_name: multilingual-feedback-adminer
    ports:
      - "8080:8080"

volumes:
  postgres_data:
